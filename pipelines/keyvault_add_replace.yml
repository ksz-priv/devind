trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'HelloWorld'

- task: AzureKeyVault@2
  inputs:
    azureSubscription: $(subscriptionConnectionProd)
    KeyVaultName: $(keyvaultName)
    secretsFilter: '*'
  displayName: 'Connect do KeyVault'


- task: AzureCLI@2
  displayName: 'KeyVault Add/Replace Secrets'
  inputs:
    azureSubscription: $(subscriptionConnectionProd)
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
        keyVaultName=$(keyvaultName)
        declare -A secrets
        secrets=( 

          ["Name1"]="Value1" 
          
          ["Name2"]="Value2" 
          
          ["Name3"]="Value3" 
          
          ["Name4"]="Value4"
          
          ["Name5"]="Value5"
          
          ["Name6"]="Value6"
          
          ["Name7"]="Value7"

          ["Name8"]="Value8"

          )

        for secret in "${!secrets[@]}"
        do
            existingSecret=$(az keyvault secret show --name $secret --vault-name $keyVaultName --query value -o tsv)
            if [ -z "$existingSecret" ]
            then
                echo "Adding secret: $secret"
                az keyvault secret set --name $secret --value "${secrets[$secret]}" --vault-name $keyVaultName
            elif [ "$existingSecret" != "${secrets[$secret]}" ]
            then
                echo "Updating secret: $secret"
                az keyvault secret set --name $secret --value "${secrets[$secret]}" --vault-name $keyVaultName
            else
                echo "No changes needed for secret: $secret"
            fi
        done

